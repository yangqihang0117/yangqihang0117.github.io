<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on Yxx&#39;s Study Notes</title>
    <link>https://yangqihang0117.github.io/tags/java/</link>
    <description>Recent content in Java on Yxx&#39;s Study Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 24 Oct 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://yangqihang0117.github.io/tags/java/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Immutable Object(不可变对象)模式</title>
      <link>https://yangqihang0117.github.io/archive/multi-thread-patterns-immutable-object/</link>
      <pubDate>Thu, 24 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://yangqihang0117.github.io/archive/multi-thread-patterns-immutable-object/</guid>
      
        <description>&lt;p&gt;  在多线程共享的情况下，为保证数据一致性，往往需要对这些变量的访问进行加锁。而锁本身又会带来一些问题与开销。&lt;strong&gt;Immutable Object模式&lt;/strong&gt;使得我们可以在不使用锁的情况下，既保证共享变量的线程安全，又避免引入锁可能带来的问题与开销。&lt;/p&gt;</description>
      
    </item>
    
  </channel>
</rss>